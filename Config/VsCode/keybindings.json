// Place your key bindings in this file to override the defaultsauto[]
[
    //s--------------- 
    {
        "key": "cmd+d",
        "command": "notebook.cell.copyDown",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "cmd+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "cmd+d",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    //e----------------------
    
    //s------------------------- 
    // =====Replace word===== //
    {
        "key": "shift+alt+down",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+down",
        "command": "-notebook.cell.copyDown",
        "when": "notebookEditorFocused && !inputFocus" 
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    //e-----------------------------------------------

    // 
    {
        "key": "shift+cmd+d",
        "command": "notebook.cell.copyUp",
        "when": "notebookEditorFocused && !inputFocus"
    },

    // 
    {
        "key": "cmd+right",
        "command": "extension.vim_cmd+right",
        "when": "editorTextFocus && vim.active && vim.use<D-right> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "cmd+left",
        "command": "extension.vim_cmd+left",
        "when": "editorTextFocus && vim.active && vim.use<D-left> && !inDebugRepl && vim.mode != 'Insert'"
    },
    
    //s---------------------- 
    {
        "key": "shift+cmd+p",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "shift+cmd+p",
        "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    //e----------------------------------------
  
    
    
    
    //=============================================================================================
    // VIM - KEYMAPPS
    
    //s---------------------------------------------- 
    // =====Move tab begin====== //

    {
        "key": ",",
        "command": "workbench.action.previousEditor",
        "when": "vim.active && vim.mode != 'insert' && vim.mode != 'visual' && !inputFocus"
    },
    {
        "key": ".",
        "command": "workbench.action.nextEditor",
        "when": "vim.active && vim.mode != 'Insert' && vim.mode != 'visual' && !inputFocus"
    },
    {
        "key": "Ctrl+,",
        "command": "workbench.action.previousEditor",
        "when": "vim.active && vim.mode != 'Normal'"
    },
    {
        "key": "Ctrl+.",
        "command": "workbench.action.nextEditor",
        "when": "vim.active && vim.mode != 'Normal'"
    },
    //e---------------------------------------------
 
    
    // quit explprer (SideBar)
    {
        "key": "q",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "vim.active && !editorTextFocus  && filesExplorerFocus && !inputFocus"
    },
  
    // close SideBar
    {
        "key": "shift+escape",
        "command": "workbench.action.closeSidebar",
        "when": "vim.active && !filesExplorerFocus && !inKeybindings && sideBarFocus && !inKeybindingsSearch && !editorTextFocus"
    },

    // close panel
    {
        "key": "escape",
        "command": "workbench.action.closePanel",
        "when": "vim.active && !inKeybindings && panelFocus && !inKeybindingsSearch && !editorTextFocus"
    },
    
    // rename file in explorer
    {
        "key": "r",
        "command": "renameFile",
        "when": "vim.active && filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },

    // create new file
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "vim.active && filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
  

    // create new folder
    {
        "key": "shift+a",
        "command": "explorer.newFolder",
        "when": "vim.active && filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    
    // open with split to side
    {
        "key": "v",
        "command": "explorer.openToSide",
        "when": "vim.active && filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
     
    // delete file
    {
        "key": "d d",
        "command": "moveFileToTrash",
        "when": "vim.active && explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    
    // Cut file
    {
        "key": "c",
        "command": "filesExplorer.cut",
        "when": "vim.active && filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    
    // Paste file
    {
        "key": "shift+c",
        "command": "filesExplorer.paste",
        "when": "vim.active && filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },

    // open folder
    {
        "key": "l",
        "command": "list.expand",
        "when": "vim.active && listFocus && treeElementCanExpand && !inputFocus || listFocus && treeElementHasChild && !inputFocus"
    },

    // close folder
    // {
    //     "key": "h",
    //     "command": "list.collapse",
    //     "when": "vim.active && listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus"
    // },


    //s---------------------------------------   
    // ======Fix issue vietnamese====== //
    {
        "key": "backspace",
        "command": "-extension.vim_backspace",
        "when": "vim.mode == 'Insert' && vim.mode != 'Normal' && editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "backspace",
        "command": "extension.vim_backspace",
        "when": "vim.mode != 'Insert' && vim.mode == 'Normal' && editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "backspace",
        "command": "-markdown.extension.onBackspaceKey",
        "when": "editorTextFocus && !editorHasMultipleSelections && !editorReadonly && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv && !suggestWidgetVisible && vim.mode != 'CommandlineInProgress' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'EasyMotionMode' && vim.mode != 'Normal' && vim.mode != 'Replace' && vim.mode != 'SearchInProgressMode' && vim.mode != 'SurroundInputMode' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine' && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },
    //e
    
    // // mouse-right
    // {
    //     "key": "Ctrl+h",
    //     "command": "editor.action.showContextMenu",
    //     "when": "vim.active" 
    // },

    // to disable "l" in vim
    {
        "key": "l",
        "command": "-list.select",
        "when": "listFocus && !inputFocus"
    },
    
    // to disable "enter" in explorer
    {
        "key": "enter",
        "command": "-renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    
    // fullscreen
    {
        "key": "alt+f",
        "command": "workbench.action.toggleFullScreen",
        "when": "vim.active && !isIOS"
    },
    
    //
    {
        "key": "cmd+n",
        "command": "workbench.action.newWindow"
    },


    //s-----------------------------------------------------------------------------------------------------------
    // Disable keybindings  
    {
        "key": "shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
 
    //
    {
        "key": "cmd+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    
    //
    {
        "key": "shift+cmd+n",
        "command": "-workbench.action.newWindow"
    },
    //e-----------------------------------------
   

    //s---------------------------------------------------------------------------------------------------------
    // ==========Change C+space -> A+space========== //
    
    // start
    {
        "key": "alt+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },

    // start
    {
        "key": "alt+space",
        "command": "extension.vim_ctrl+space",
        "when": "editorTextFocus && vim.active && vim.use<C-space> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+space",
        "command": "-extension.vim_ctrl+space",
        "when": "editorTextFocus && vim.active && vim.use<C-space> && !inDebugRepl && vim.mode != 'Insert'"
    },

    // start
    {
        "key": "alt+space",
        "command": "focusSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+space",
        "command": "-focusSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },

    // start
    {
        "key": "alt+space",
        "command": "toggleSuggestionDetails",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+space",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },

    // start
    {
        "key": "alt+space",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
    },
    {
        "key": "ctrl+space",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
    }, 

    // start
    {
        "key": "alt+space",
        "command": "workbench.action.terminal.sendSequence",
        "when": "config.terminal.integrated.shellIntegration.suggestEnabled && terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
    },
    {
        "key": "ctrl+space",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "config.terminal.integrated.shellIntegration.suggestEnabled && terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
    },
    //e--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 

    {
        "key": "cmd+k v",
        "command": "-markdown-preview-enhanced.openPreviewToTheSide",
        "when": "editorLangId == 'markdown'"
    },


    //s---------------------------------------------------------------
    
    // =====preview markdown===== //

    {
        "key": "shift+cmd+v",
        "command": "markdown-preview-enhanced.openPreviewToTheSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "shift+cmd+v",
        "command": "-markdown-preview-enhanced.openPreview",
        "when": "editorLangId == 'markdown'"
    },
    //e------------------------------------------------------
    
    // 
    {
        "key": "cmd+c",
        "command": "-extension.vim_cmd+c",
        "when": "editorTextFocus && vim.active && vim.overrideCopy && vim.use<D-c> && !inDebugRepl"
    },
    
   
] 